# Service
api.context.path=/eus/v1
use.torm=true
et.files.path=${et.shared.folder}/eus
registry.folder=${et.files.path}
registry.metadata.extension=.eus
registry.recording.extension=.mp4
log.executor.size=10
log.poll.ms=1000
create.session.timeout.sec=25
create.session.retries=3
et.enable.cloud.mode=false

# Docker
eus.container.prefix=eus-
docker.wait.timeout.sec=20
docker.default.socket=/var/run/docker.sock
docker.network=elastest_elastest
docker.default.host.ip=172.17.0.1
docker.hub.url=https://hub.docker.com/

# Selenoid
browser.version=2.1.0
browser.version.separator=-
browser.image.namespace=elastestbrowsers
#### format example: elastestbrowsers/chrome:70-2.0.0
browser.image.format=${browser.image.namespace}/%s:%s${browser.version.separator}%s
browser.image.skip.prefix=Utils-
browser.image.latest.version=latest
browser.shm.size=2147483648
browser.screen.resolution=1440x1080x24
browser.timezone=Europe/Madrid
browser.docker.hub.timeout=60

# noVNC
novnc.container.sufix=novnc-
novnc.exposedport=8080
novnc.html=vnc.html
novnc.lite.html=vnc_lite.html
novnc.autofocus.html=vnc-autofocus.html
novnc.script.filename=/novnc.sh

start.recording.script.filename=start-video-recording.sh
stop.recording.script.filename=stop-video-recording.sh
container.main.folder=/home/ubuntu
container.recording.folder=${container.main.folder}/recordings
container.shared.files.folder=${container.main.folder}/et_shared_files
host.shared.files.relative.folder=shared_files


# Selenium Grid
hub.exposedport=4444
hub.vnc.exposedport=5900
hub.novnc.exposedport=6080
hub.container.sufix=browser-
hub.vnc.password=selenoid
hub.timeout=60

# W3C WebDriver protocol / JSON Wire protocol
webdriver.capabilities=desiredCapabilities
webdriver.browserName=browserName
webdriver.version=version
webdriver.platform=platform
webdriver.any.platform=ANY
webdriver.sessionId=sessionId
webdriver.session.message=/session
webdriver.crossbrowser.session.message=/crossbrowser
webdriver.navigation.get.message=/url
webdriver.execute.script.message=/execute
webdriver.execute.sync.script.message=/execute/sync
webdriver.execute.async.script.message=/execute_async

# Properties
properties.filename=docker-browser.properties
properties.separator.char=_
properties.docker.image.key=dockerImage

# WebSocket
ws.path=${api.context.path}/eus-ws
ws.dateformat=dd-MM-yyyy hh:mm:ss z
ws.protocol.newSession=newSession
ws.protocol.removeSession=removeSession
ws.protocol.recordedSession=recordedSession
ws.protocol.id=id
ws.protocol.sessionId=sessionId
ws.protocol.url=url
ws.protocol.browser=browser
ws.protocol.version=version
ws.protocol.creationTime=creationTime
ws.protocol.getSessions=getSessions
ws.protocol.getLiveSessions=getLiveSessions
ws.protocol.getRecordings=getRecordings

# EDM
edm.alluxio.url=

# Health
endpoints.health.enabled=true
management.context-path=/

# Environment variables
et.host.env=ET_PUBLIC_HOST
et.host.type.env=ET_PUBLIC_HOST_TYPE
et.config.web.rtc.stats=false
et.browser.component.prefix=tss_eus_browser_
et.mon.interval=1

et.intercept.script.key=elastestCommand
et.intercept.script.prefix={"${et.intercept.script.key}"
et.intercept.script.escaped.prefix={\"${et.intercept.script.key}\"

# Services

## Browsersync
eus.service.browsersync.prefix=browsersync-
eus.service.browsersync.image.name=elastest/eus-browsersync:latest
eus.service.browsersync.gui.port=3001
eus.service.browsersync.app.port=3000

## WebRTC QoE Meter
eus.service.webrtc.qoe.meter.prefix=webrtc-qoe-meter-
eus.service.webrtc.qoe.meter.image.name=elastest/eus-webrtc-qoe-meter:latest
eus.service.webrtc.qoe.meter.path=/elastest-webrtc-qoe-meter
eus.service.webrtc.qoe.meter.scripts.path=${eus.service.webrtc.qoe.meter.path}/scripts
eus.service.webrtc.qoe.meter.script.calculate.filename=calculate_qoe_metrics.sh
eus.service.webrtc.qoe.meter.original.video.name=0-presenter.webm
eus.service.webrtc.qoe.meter.received.video.name=0-viewer.webm


